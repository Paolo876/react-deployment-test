{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/layout/Layout.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/Quotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","quoteID","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","to","QuoteItem","props","item","text","author","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortAscending","URLSearchParams","search","get","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","Quotes","loadedQuotes","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","NewQuote","lazy","QuoteInfo","NotFound","App","fallback","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b583b7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__wN1mG\",\"logo\":\"MainNavigation_logo__pb7NU\",\"nav\":\"MainNavigation_nav__3JQcL\",\"active\":\"MainNavigation_active__1Z1aq\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3c2MG\",\"sorting\":\"QuoteList_sorting__2JcOG\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  \n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-router-proj-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteID}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__1sM35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1766O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1zbkZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1NZvQ\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();   //gives access to history object - changes and manages url    **causes component re-render\n  const location = useLocation();   //gives access to location object - holds information on the current page\n  const queryParams = new URLSearchParams(location.search);   //this is a js feature used to work with the query string of URL. turns the url string to an object instance\n\n  const isSortAscending = queryParams.get('sort') === 'asc';\n\n  sortQuotes(props.quotes, isSortAscending);\n  const changeSortHandler = () => {\n    // history.push({pathname: location.pathname, search: `?sort=${(isSortAscending ? 'desc' : 'asc')}` });           //alternative way, for complex projs\n    history.push(`${location.pathname}?sort=${(isSortAscending ? 'desc' : 'asc')}`);\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>Sort {isSortAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\"\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\n// const DUMMY_QUOTES =[\r\n//     {id: 'q1', author: 'Pao', text: 'this is a sample text for q1.'},\r\n//     {id: 'q2', author: 'Paolo', text: 'this is a sample text for q2.'},\r\n//     {id: 'q3', author: 'Ja', text: 'this is a sample text for q3.'},\r\n// ]; \r\nconst Quotes = () => {\r\n    const {sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true); \r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if(status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(error) {\r\n        return (\r\n            <p className='centered focused'>{error}</p>\r\n        )\r\n    }\r\n\r\n    if(status === 'completed' && loadedQuotes.length === 0) {\r\n        return <NoQuotesFound/>\r\n    }\r\n    return (  \r\n        <QuoteList quotes={loadedQuotes}/>\r\n    );\r\n}\r\n \r\nexport default Quotes; ","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\"\r\nconst MainNavigation = () => {\r\n    return (  \r\n        <header className={classes.header}>\r\n            <div className={classes.logo}>Great Quotes</div>\r\n            <nav className={classes.nav}>\r\n                <ul>\r\n                    <li><NavLink to=\"/quotes\" activeClassName={classes.active}>Quotes</NavLink></li>\r\n                    <li><NavLink to=\"/new-quote\" activeClassName={classes.active}>Add a Quote</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default MainNavigation;","import classes from \"./Layout.module.css\"\r\nimport MainNavigation from \"./MainNavigation\";\r\nconst Layout = (props) => {\r\n    return (  \r\n        <>\r\n            <MainNavigation/>\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Layout;","// LAZY LOADING - make the initial loading much faster\n// *optimization-Lazy loading - only load code when needed very useful for routing as it only loads data from the specific route. ONLY FOR PAGES NOT COMPONENTS\n// since the code runs synchronously, we need to show a content while the component passed on React.lazy() is loading. Wrap the Routes element with <Suspense><Suspense/>\n//    with a prop of fallback={*jsx*} with a value of the component that will render will the data is being downloaded\nimport { lazy, Suspense } from \"react\";\nimport { Route, Switch, Redirect} from \"react-router-dom\";\nimport Quotes from \"./pages/Quotes\";\n// import QuoteInfo from \"./pages/QuoteInfo\";\n// import NewQuote from \"./pages/NewQuote\";\n// import NotFound from \"./pages/NotFound\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = lazy(() => import(\"./pages/NewQuote\"));    //import pages as a function using React.lazy()\nconst QuoteInfo = lazy(() => import(\"./pages/QuoteInfo\"));    \nconst NotFound = lazy(() => import(\"./pages/NotFound\"));    \nfunction App() {\n  return (\n    <Layout>\n    <Suspense fallback={<div className=\"centered\"><LoadingSpinner/></div>}> {/*Suspense runs while  */}\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\"/>\n          </Route>\n          <Route path=\"/quotes\" exact>\n            {/* exact attribute makes sure that the whole path being fetched is exactly equal to the route's path  */}\n            <Quotes/>\n          </Route>\n          <Route path=\"/quotes/:quoteID\">\n            <QuoteInfo/>\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote/>\n          </Route>\n\n          {/* url that doesn't match any of the provided routes will render this. path='*' .MAKE SURE THIS IS LAST ON THE LIST OF ROUTES\n          */}\n          <Route path='*'>  \n            <NotFound/>\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n"],"sourceRoot":""}